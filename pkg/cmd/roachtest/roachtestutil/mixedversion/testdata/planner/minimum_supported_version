# Test that user steps are not scheduled until the cluster is
# upgrading from the minimum supported version.

mixed-version-test predecessors=(21.2.11, 22.1.8, 22.2.3, 23.1.4, 23.2.0) num_upgrades=5 minimum_supported_version=v23.1.0
----
ok

in-mixed-version name=(mixed-version 1)
----
ok

in-mixed-version name=(mixed-version 2)
----
ok

workload name=bank
----
ok

background-command name=(csv server)
----
ok

after-upgrade-finalized name=(validate upgrade)
----
ok

plan
----
Upgrades:           v21.2.11 → v22.1.8 → v22.2.3 → v23.1.4 → v23.2.0 → <current>
Deployment mode:    system-only
Plan:
├── install fixtures for version "v21.2.11" (1)
├── start cluster at version "v21.2.11" (2)
├── wait for system tenant on nodes :1-4 to reach cluster version '21.2' (3)
├── upgrade cluster from "v21.2.11" to "v22.1.8"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (4)
│   ├── upgrade nodes :1-4 from "v21.2.11" to "v22.1.8"
│   │   ├── restart node 2 with binary version v22.1.8 (5)
│   │   ├── restart node 4 with binary version v22.1.8 (6)
│   │   ├── restart node 1 with binary version v22.1.8 (7)
│   │   └── restart node 3 with binary version v22.1.8 (8)
│   ├── downgrade nodes :1-4 from "v22.1.8" to "v21.2.11"
│   │   ├── restart node 3 with binary version v21.2.11 (9)
│   │   ├── restart node 4 with binary version v21.2.11 (10)
│   │   ├── restart node 1 with binary version v21.2.11 (11)
│   │   └── restart node 2 with binary version v21.2.11 (12)
│   ├── upgrade nodes :1-4 from "v21.2.11" to "v22.1.8"
│   │   ├── restart node 4 with binary version v22.1.8 (13)
│   │   ├── restart node 1 with binary version v22.1.8 (14)
│   │   ├── restart node 2 with binary version v22.1.8 (15)
│   │   ├── wait for 5m0s (16)
│   │   └── restart node 3 with binary version v22.1.8 (17)
│   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (18)
│   └── wait for system tenant on nodes :1-4 to reach cluster version '22.1' (19)
├── upgrade cluster from "v22.1.8" to "v22.2.3"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (20)
│   ├── upgrade nodes :1-4 from "v22.1.8" to "v22.2.3"
│   │   ├── restart node 1 with binary version v22.2.3 (21)
│   │   ├── restart node 3 with binary version v22.2.3 (22)
│   │   ├── restart node 4 with binary version v22.2.3 (23)
│   │   ├── wait for 5m0s (24)
│   │   └── restart node 2 with binary version v22.2.3 (25)
│   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (26)
│   └── wait for system tenant on nodes :1-4 to reach cluster version '22.2' (27)
├── upgrade cluster from "v22.2.3" to "v23.1.4"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (28)
│   ├── upgrade nodes :1-4 from "v22.2.3" to "v23.1.4"
│   │   ├── restart node 3 with binary version v23.1.4 (29)
│   │   ├── restart node 4 with binary version v23.1.4 (30)
│   │   ├── restart node 1 with binary version v23.1.4 (31)
│   │   ├── wait for 1m0s (32)
│   │   └── restart node 2 with binary version v23.1.4 (33)
│   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (34)
│   └── wait for system tenant on nodes :1-4 to reach cluster version '23.1' (35)
├── run "initialize bank workload" (36)
├── start background hooks concurrently
│   ├── run "bank workload", after 100ms delay (37)
│   └── run "csv server", after 100ms delay (38)
├── upgrade cluster from "v23.1.4" to "v23.2.0"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (39)
│   ├── upgrade nodes :1-4 from "v23.1.4" to "v23.2.0"
│   │   ├── restart node 2 with binary version v23.2.0 (40)
│   │   ├── run "mixed-version 2" (41)
│   │   ├── restart node 3 with binary version v23.2.0 (42)
│   │   ├── run "mixed-version 1" (43)
│   │   ├── restart node 1 with binary version v23.2.0 (44)
│   │   └── restart node 4 with binary version v23.2.0 (45)
│   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (46)
│   ├── run "mixed-version 1" (47)
│   ├── wait for system tenant on nodes :1-4 to reach cluster version '23.2' (48)
│   └── run "validate upgrade" (49)
└── upgrade cluster from "v23.2.0" to "<current>"
   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (50)
   ├── upgrade nodes :1-4 from "v23.2.0" to "<current>"
   │   ├── restart node 1 with binary version <current> (51)
   │   ├── restart node 4 with binary version <current> (52)
   │   ├── run "mixed-version 2" (53)
   │   ├── restart node 3 with binary version <current> (54)
   │   ├── run "mixed-version 1" (55)
   │   └── restart node 2 with binary version <current> (56)
   ├── downgrade nodes :1-4 from "<current>" to "v23.2.0"
   │   ├── restart node 2 with binary version v23.2.0 (57)
   │   ├── run "mixed-version 1" (58)
   │   ├── restart node 1 with binary version v23.2.0 (59)
   │   ├── restart node 3 with binary version v23.2.0 (60)
   │   ├── run "mixed-version 2" (61)
   │   └── restart node 4 with binary version v23.2.0 (62)
   ├── upgrade nodes :1-4 from "v23.2.0" to "<current>"
   │   ├── restart node 2 with binary version <current> (63)
   │   ├── restart node 4 with binary version <current> (64)
   │   ├── restart node 3 with binary version <current> (65)
   │   ├── run "mixed-version 1" (66)
   │   ├── restart node 1 with binary version <current> (67)
   │   └── run "mixed-version 2" (68)
   ├── allow upgrade to happen by resetting `preserve_downgrade_option` (69)
   ├── run "mixed-version 2" (70)
   ├── wait for system tenant on nodes :1-4 to reach cluster version <current> (71)
   └── run "validate upgrade" (72)
