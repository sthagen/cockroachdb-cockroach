# Tests the behaviour of the `preserve_downgrade_randomizer` mutator.

add-mutators preserve_downgrade_option_randomizer
----
ok

mixed-version-test predecessors=(21.2.29, 22.1.8, 22.2.3, 23.1.10, 23.2.4, 24.1.0, 24.2.1) num_upgrades=5 mutator_probabilities=(preserve_downgrade_option_randomizer, 1) enable_skip_version=true
----
ok

in-mixed-version name=(my mixed-version feature)
----
ok

on-startup name=(do something)
----
ok

plan debug=true
----
Seed:               12345
Upgrades:           v22.2.3 → v23.1.10 → v23.2.4 → v24.1.0 → v24.3.0 (<current>)
Deployment mode:    system-only
Mutators:           preserve_downgrade_option_randomizer
Hooks:              do something, my mixed-version feature
Plan:
├── install fixtures for version "v22.2.3" (1) [stage=system-setup]
├── start cluster at version "v22.2.3" (2) [stage=system-setup]
├── wait for all nodes (:1-4) to acknowledge cluster version '22.2' on system tenant (3) [stage=system-setup]
├── run "do something" hookId="planner_test.go:141" (4) [stage=on-startup]
├── upgrade cluster from "v22.2.3" to "v23.1.10"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (5) [stage=init]
│   ├── upgrade nodes :1-4 from "v22.2.3" to "v23.1.10"
│   │   ├── restart node 2 with binary version v23.1.10 (6) [stage=last-upgrade]
│   │   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (7) [stage=last-upgrade]
│   │   ├── restart node 4 with binary version v23.1.10 (8) [stage=last-upgrade]
│   │   ├── run "my mixed-version feature" hookId="planner_test.go:143" (9) [stage=last-upgrade]
│   │   ├── restart node 1 with binary version v23.1.10 (10) [stage=last-upgrade]
│   │   └── restart node 3 with binary version v23.1.10 (11) [stage=last-upgrade]
│   └── wait for all nodes (:1-4) to acknowledge cluster version '23.1' on system tenant (12) [stage=running-upgrade-migrations,finalizing]
├── upgrade cluster from "v23.1.10" to "v23.2.4"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (13) [stage=init]
│   ├── upgrade nodes :1-4 from "v23.1.10" to "v23.2.4"
│   │   ├── restart node 3 with binary version v23.2.4 (14) [stage=temporary-upgrade]
│   │   ├── restart node 1 with binary version v23.2.4 (15) [stage=temporary-upgrade]
│   │   ├── restart node 4 with binary version v23.2.4 (16) [stage=temporary-upgrade]
│   │   ├── run "my mixed-version feature" hookId="planner_test.go:143" (17) [stage=temporary-upgrade]
│   │   └── restart node 2 with binary version v23.2.4 (18) [stage=temporary-upgrade]
│   ├── downgrade nodes :1-4 from "v23.2.4" to "v23.1.10"
│   │   ├── restart node 1 with binary version v23.1.10 (19) [stage=rollback-upgrade]
│   │   ├── run "my mixed-version feature" hookId="planner_test.go:143" (20) [stage=rollback-upgrade]
│   │   ├── restart node 3 with binary version v23.1.10 (21) [stage=rollback-upgrade]
│   │   ├── restart node 4 with binary version v23.1.10 (22) [stage=rollback-upgrade]
│   │   └── restart node 2 with binary version v23.1.10 (23) [stage=rollback-upgrade]
│   ├── upgrade nodes :1-4 from "v23.1.10" to "v23.2.4"
│   │   ├── restart node 3 with binary version v23.2.4 (24) [stage=last-upgrade]
│   │   ├── run "my mixed-version feature" hookId="planner_test.go:143" (25) [stage=last-upgrade]
│   │   ├── restart node 4 with binary version v23.2.4 (26) [stage=last-upgrade]
│   │   ├── restart node 2 with binary version v23.2.4 (27) [stage=last-upgrade]
│   │   └── restart node 1 with binary version v23.2.4 (28) [stage=last-upgrade]
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (29) [stage=running-upgrade-migrations,finalizing]
│   ├── run "my mixed-version feature" hookId="planner_test.go:143" (30) [stage=running-upgrade-migrations,finalizing]
│   └── wait for all nodes (:1-4) to acknowledge cluster version '23.2' on system tenant (31) [stage=running-upgrade-migrations,finalizing]
├── upgrade cluster from "v23.2.4" to "v24.1.0"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (32) [stage=init]
│   ├── upgrade nodes :1-4 from "v23.2.4" to "v24.1.0"
│   │   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (33) [stage=last-upgrade]
│   │   ├── restart node 3 with binary version v24.1.0 (34) [stage=last-upgrade]
│   │   ├── run "my mixed-version feature" hookId="planner_test.go:143" (35) [stage=last-upgrade]
│   │   ├── restart node 2 with binary version v24.1.0 (36) [stage=last-upgrade]
│   │   ├── restart node 1 with binary version v24.1.0 (37) [stage=last-upgrade]
│   │   └── restart node 4 with binary version v24.1.0 (38) [stage=last-upgrade]
│   └── wait for all nodes (:1-4) to acknowledge cluster version '24.1' on system tenant (39) [stage=running-upgrade-migrations,finalizing]
└── upgrade cluster from "v24.1.0" to "v24.3.0 (<current>)"
   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (40) [stage=init]
   ├── upgrade nodes :1-4 from "v24.1.0" to "v24.3.0 (<current>)"
   │   ├── restart node 2 with binary version v24.3.0 (<current>) (41) [stage=temporary-upgrade]
   │   ├── restart node 3 with binary version v24.3.0 (<current>) (42) [stage=temporary-upgrade]
   │   ├── restart node 4 with binary version v24.3.0 (<current>) (43) [stage=temporary-upgrade]
   │   ├── restart node 1 with binary version v24.3.0 (<current>) (44) [stage=temporary-upgrade]
   │   └── run "my mixed-version feature" hookId="planner_test.go:143" (45) [stage=temporary-upgrade]
   ├── downgrade nodes :1-4 from "v24.3.0 (<current>)" to "v24.1.0"
   │   ├── restart node 2 with binary version v24.1.0 (46) [stage=rollback-upgrade]
   │   ├── restart node 3 with binary version v24.1.0 (47) [stage=rollback-upgrade]
   │   ├── run "my mixed-version feature" hookId="planner_test.go:143" (48) [stage=rollback-upgrade]
   │   ├── restart node 1 with binary version v24.1.0 (49) [stage=rollback-upgrade]
   │   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (50) [stage=rollback-upgrade]
   │   └── restart node 4 with binary version v24.1.0 (51) [stage=rollback-upgrade]
   ├── upgrade nodes :1-4 from "v24.1.0" to "v24.3.0 (<current>)"
   │   ├── restart node 3 with binary version v24.3.0 (<current>) (52) [stage=last-upgrade]
   │   ├── run "my mixed-version feature" hookId="planner_test.go:143" (53) [stage=last-upgrade]
   │   ├── restart node 4 with binary version v24.3.0 (<current>) (54) [stage=last-upgrade]
   │   ├── restart node 2 with binary version v24.3.0 (<current>) (55) [stage=last-upgrade]
   │   └── restart node 1 with binary version v24.3.0 (<current>) (56) [stage=last-upgrade]
   ├── run "my mixed-version feature" hookId="planner_test.go:143" (57) [stage=running-upgrade-migrations,finalizing]
   └── wait for all nodes (:1-4) to acknowledge cluster version <current> on system tenant (58) [stage=running-upgrade-migrations,finalizing]
